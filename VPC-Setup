{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This Template will create 2 Public Subnets spread across 2 AZs and 3 Private Subnets spread across 3 AZs.It deploys one Internet Gateway with a default route on the Public Subnets. It deploys a NAT Gateway and default routes for Private Subnets. It will create Role for Cloudwatch Logs, Will enable VPC Flow Logs and also create customized Network Access List",
    "Metadata": {},
    "Parameters": {
        "VPCname": {
            "Description": "Specify VPC Name",
            "Type": "String",
            "Default": "TestVPC"
        },
        "VPCcidr": {
            "Description": "Choose CIDR for the VPC",
            "Type": "String",
            "Default": "172.16.0.0/16"
        },
        "PublicSubnet1CIDR": {
            "Description": "Choose CIDR for Public Subnet 1",
            "Type": "String",
            "Default": "172.16.1.0/24"
        },
        "PublicSubnet2CIDR": {
            "Description": "Choose CIDR for Public Subent 2",
            "Type": "String",
            "Default": "172.16.2.0/24"
        },
        "PrivateSubnet1CIDR": {
            "Description": "Choose CIDR for Private Subnet 1",
            "Type": "String",
            "Default": "172.16.8.0/21"
        },
        "PrivateSubnet2CIDR": {
            "Description": "Choose CIDR for Private Subnet 2",
            "Type": "String",
            "Default": "172.16.16.0/21"
        },
        "PrivateSubnet3CIDR": {
            "Description": "Choose CIDR for Private Subnet 3",
            "Type": "String",
            "Default": "172.16.24.0/21"
        },
        "PublicSubnet1AZ": {
            "Description": "Choose availability zone for PublicSubet1",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "PublicSubnet2AZ": {
            "Description": "Choose availability zone for PublicSubet2",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "PrivateSubnet1AZ": {
            "Description": "Choose availability zone for PrivateSubnet1",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "PrivateSubnet2AZ": {
            "Description": "Choose availability zone for PrivateSubnet2",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "PrivateSubnet3AZ": {
            "Description": "Choose availability zone for PrivateSubnet3",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Mappings": {},
    "Conditions": {},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCcidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "VPCname"
                        }
                    }
                ],
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "InstanceTenancy": "default"
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "PublicSubnet1AZ"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1CIDR"
                },
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicSubnet1"
                    }
                ]
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "PublicSubnet2AZ"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet2CIDR"
                },
                "MapPublicIpOnLaunch": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicSubnet2"
                    }
                ]
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "PrivateSubnet1AZ"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnet1CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateSubnet1"
                    }
                ]
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "PrivateSubnet2AZ"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnet2CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateSubnet2"
                    }
                ]
            }
        },
        "PrivateSubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "PrivateSubnet3AZ"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnet3CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateSubnet3"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "InternetGateway"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PublicRoutetable"
                    }
                ]
            }
        },
        "RouteIGW": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "PublicSubnet2RouteTableAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            }
        },
        "ElasticIPNatgateway": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NatGateway-eIP"
                    }
                ]
            }
        },
        "NatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "ElasticIPNatgateway",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NatGateway"
                    }
                ]
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "PrivateRoutetable"
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NatGateway"
                }
            }
        },
        "PrivateSubnet1RouteAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnet2RouteAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnet3RouteAssoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet3"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "NACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "DependsOn": "VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NACLforVPC"
                    }
                ]
            }
        },
        "InboundRule0": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NACL"
                },
                "RuleNumber": 100,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
                
            }
        },
        
        "OutboundRule0": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NACL"
                },
                "RuleNumber": 100,
                "Protocol": -1,
                "Egress": true,
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
                        		
        "PrivateSubnet1NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "NACL"
                }
            }
        },
        "PrivateSubnet2NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "NACL"
                }
            }
        },
        "PrivateSubnet3NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet3"
                },
                "NetworkAclId": {
                    "Ref": "NACL"
                }
            }
        },
        "PublicSubnet1NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "NACL"
                }
            }
        },
        "PublicSubnet2NetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "NACL"
                }
            }
        },
        "RoleforCloudWatch": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "vpc-flow-logs.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "flowlogs-policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "Loggroup",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "RoleName": "CloudWatchRoleForLogs"
            }
        },
        
        "Loggroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "VPC_Flow_Logs"
            }
        },
        "VPCEndpoint": {
            "Type": "AWS::EC2::VPCEndpoint",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                "arn:aws:s3:::*"
                            ]
                        }
                    ]
                },
                "RouteTableIds": [
                    {
                        "Ref": "PublicSubnetRouteTable"
                    },
                    {
                        "Ref": "PrivateRouteTable"
                    }
                ],
                "ServiceName": {
                    "Fn::Sub": "com.amazonaws.${AWS::Region}.s3"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "VPCFlowLogs": {
            "Type": "AWS::EC2::FlowLog",
            "DependsOn": "RoleforCloudWatch",
            "Properties": {
                "DeliverLogsPermissionArn": {
                    "Fn::GetAtt": [
                        "RoleforCloudWatch",
                        "Arn"
                    ]
                },
                "LogGroupName": {
                    "Ref": "Loggroup"
                },
                "ResourceId": {
                    "Ref": "VPC"
                },
                "ResourceType": "VPC",
                "TrafficType": "ALL"
            }
        },
        "CMkey": {
            "Type": "AWS::KMS::Key",
            "Properties": {
                "Description": "A symmetric CMK",
                "EnableKeyRotation": true,
                "PendingWindowInDays": 20,
                "KeyPolicy": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Enable IAM User Permissions",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            ":root"
                                        ]
                                    ]
                                }
                            },
                            "Action": "kms:*",
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "myAlias": {
            "Type": "AWS::KMS::Alias",
            "Properties": {
                "AliasName": "alias/mykey",
                "TargetKeyId": {
                    "Ref": "CMkey"
                }
            }
        }
    },
    "Outputs": {
        "VPC": {
            "Description": "VPC ID",
            "Value": {
                "Ref": "VPC"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-VPC"
                }
            }
        },
        "PublicSubnet1ID": {
            "Description": "PublicSubnet1 ID",
            "Value": {
                "Ref": "PublicSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
                }
            }
        },
        "PublicSubnet2ID": {
            "Description": "PublicSubnet2 ID",
            "Value": {
                "Ref": "PublicSubnet2"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
                }
            }
        },
        "PrivateSubnet1ID": {
            "Description": "PrivateSubnet1 ID",
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet1"
                }
            }
        },
        "PrivateSubnet2ID": {
            "Description": "PrivateSubnet2 ID",
            "Value": {
                "Ref": "PrivateSubnet2"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet2"
                }
            }
        },
        "PrivateSubnet3ID": {
            "Description": "PrivateSubnet3 ID",
            "Value": {
                "Ref": "PrivateSubnet3"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-PrivateSubnet3"
                }
            }
        },
        "KMS": {
            "Description": "CMK created on AWS KMS",
            "Value": {
                "Ref": "CMkey"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-CMkey"
                }
            }
        }
    }
}
